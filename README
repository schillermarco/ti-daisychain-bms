Origin
======
This repository is based on this [repository](https://github.com/catphish/ti-daisychain-bms).
Special Thanks to [@catphish](https://www.github.com/catphish) for the awesome work.
The main reason for this repository is a restructuring to allow easier extension of features.

TI Daisychain BMS Master
========================

BMS master for daisychained bq76PL455A slave modules.

This board will communicate with up to 3 strings of bq76PL455A battery
modules. Each string supports up to 16 modules, and each module supports
up to 16 cells. A common configuration is 3 strings of 6 modules but any
combination is supported.

The board will read the voltages of all detected cells and will perform
balancing as well as reporting data over CAN.

Connector J1
=============

------------------------
| CANH | WAKE1 | WAKE2 |
| CANL |  GND  |  +12V |
------------------------

The low voltage connector J1 has 3 functions:

1) Connect +12v to a permanent positive suppy (5v - 14v)
2) Connect CANH and CANL to a CAN bus.
3) Wakeup signals not used in this software version

Connector J2, J3, J4
====================

Each of the BATT1, BATT2 and BATT3 (J2,J3,J4) may be connected to the data
pins of a bq76PL455A battery module. All three are optional, and all three
support a full chain of up to 16 battery modules, or any partial chain.
Chain lengths do not have to be matched. The pinout of the battery module
is beyong the scope of this document.

Balancing
=========

If any cell voltage is detected as being higher than 4.0V and more than 10mV
higher than the lowest recorded cell voltage, it will be bled until one of
these ocnditions is no longer met. To prevent excessive heat, only one cell
in each battery (16 cell module) will be bled simultaneously. If multiple cells
meet the criteria, the cell with the highest voltage will be selected.
Balancing will be considered complete when no cells meet the criteria for
balancing.

CAN Messages
============
The pico sends the measured data and all relevant information to the CAN Bus. The messages are documented by a DBC file (see can/bms.dbc).

Current measurement
===================
The pico is able to monitor the current of the battery. For this purpose a LEM current sensor can be connected to GPIO 27. The sensor should not be connected directly (5V output vs 3.3V input). A voltage divider can be used for level shifting. Configuration of current sensor: firmware-pico/currentMeasurement.c

Relais
======
For safety shutdown a relais can be connected to GPIO 15.

Configuration
=============
The main configuration can be done with the firmware-pico/cfg.h.
